-- ============================================================
-- FII_RAW_001 Schema - Fixed Income Raw Data Ingestion
-- Generated on: 2025-10-05
-- ============================================================
--
-- OVERVIEW:
-- This schema stores raw fixed income trade data including government bonds,
-- corporate bonds, and interest rate swaps (IRS). Data is loaded from CSV files
-- generated by fixed_income_generator.py.
--
-- BUSINESS PURPOSE:
-- - Store all fixed income trades for interest rate risk management
-- - Support FRTB (Fundamental Review of the Trading Book) capital calculations
-- - Enable duration and DV01 analytics for interest rate sensitivity
-- - Track credit spread risk for corporate bond portfolios
-- - Maintain audit trail for regulatory compliance
--
-- OBJECTS CREATED:
-- ┌─ TABLES (1):
-- │  └─ FIII_TRADES - Main table for all fixed income trades
-- │
-- ├─ STREAMS (1):
-- │  └─ FIII_TRADES_STREAM - Change data capture for incremental processing
-- │
-- ├─ STAGES (1):
-- │  └─ FIII_STAGE - Internal stage for CSV file ingestion
-- │
-- └─ TASKS (1):
--    └─ FIII_LOAD_TRADES_TASK - Serverless task for automated CSV loading
--
-- DATA FLOW:
-- CSV Files → FIII_STAGE → FIII_TRADES → FIII_TRADES_STREAM → FII_AGG_001
--
-- RELATED SCHEMAS:
-- - FII_AGG_001: Aggregation layer for duration, DV01, and credit risk analytics
-- - CRM_RAW_001: Customer and account master data
-- - REF_RAW_001: FX rates for currency conversion
-- ============================================================

USE DATABASE AAA_DEV_SYNTHETIC_BANK;
USE SCHEMA FII_RAW_001;

-- ============================================================
-- FIII_TRADES - Main Fixed Income Trades Table
-- ============================================================
-- Stores all bond and interest rate swap trades with risk metrics

CREATE OR REPLACE TABLE FIII_TRADES (
    -- Trade Identification
    TRADE_DATE TIMESTAMP_NTZ COMMENT 'Trade execution timestamp',
    SETTLEMENT_DATE DATE COMMENT 'Settlement date for cash/securities transfer',
    TRADE_ID VARCHAR(50) PRIMARY KEY COMMENT 'Unique trade identifier',
    CUSTOMER_ID VARCHAR(20) COMMENT 'Customer who executed the trade',
    ACCOUNT_ID VARCHAR(50) COMMENT 'Investment account used for settlement',
    ORDER_ID VARCHAR(50) COMMENT 'Order reference for trade grouping',
    
    -- Instrument Details
    INSTRUMENT_TYPE VARCHAR(10) COMMENT 'BOND or IRS (Interest Rate Swap)',
    INSTRUMENT_ID VARCHAR(50) COMMENT 'ISIN for bonds, swap ID for swaps',
    ISSUER VARCHAR(100) COMMENT 'Bond issuer or swap counterparty',
    ISSUER_TYPE VARCHAR(20) COMMENT 'SOVEREIGN, CORPORATE, or SUPRANATIONAL',
    CURRENCY VARCHAR(3) COMMENT 'Trade currency (CHF, EUR, USD, GBP)',
    SIDE VARCHAR(1) COMMENT '1=Buy/Pay, 2=Sell/Receive (FIX standard)',
    
    -- Financial Details
    NOTIONAL FLOAT COMMENT 'Notional amount (face value)',
    PRICE FLOAT COMMENT 'Clean price (as % of par for bonds, rate for swaps)',
    ACCRUED_INTEREST FLOAT COMMENT 'Accrued interest amount (bonds only)',
    GROSS_AMOUNT FLOAT COMMENT 'Signed gross amount: price * notional + accrued',
    COMMISSION FLOAT COMMENT 'Trading commission',
    NET_AMOUNT FLOAT COMMENT 'Signed net amount: gross_amount +/- commission',
    
    -- Base Currency (CHF)
    BASE_CURRENCY VARCHAR(3) COMMENT 'Base reporting currency (CHF)',
    BASE_GROSS_AMOUNT FLOAT COMMENT 'Gross amount in CHF',
    BASE_NET_AMOUNT FLOAT COMMENT 'Net amount in CHF',
    FX_RATE FLOAT COMMENT 'Exchange rate used for conversion to CHF',
    
    -- Swap-Specific Fields
    FIXED_RATE FLOAT COMMENT 'Fixed rate for IRS (annual %)',
    FLOATING_RATE_INDEX VARCHAR(20) COMMENT 'SARON, EURIBOR, SOFR, SONIA',
    TENOR_YEARS FLOAT COMMENT 'Swap maturity in years',
    
    -- Risk Metrics (FRTB)
    COUPON_RATE FLOAT COMMENT 'Annual coupon rate (%)',
    MATURITY_DATE DATE COMMENT 'Instrument maturity date',
    DURATION FLOAT COMMENT 'Modified duration (years) - interest rate sensitivity',
    DV01 FLOAT COMMENT 'Dollar value of 1bp move in base currency',
    CREDIT_RATING VARCHAR(10) COMMENT 'AAA, AA, A, BBB, BB, B, CCC',
    CREDIT_SPREAD_BPS FLOAT COMMENT 'Spread over risk-free rate (basis points)',
    
    -- Market Data
    MARKET VARCHAR(50) COMMENT 'Trading venue/exchange',
    BROKER_ID VARCHAR(50) COMMENT 'Executing broker identifier',
    VENUE VARCHAR(50) COMMENT 'Trading venue',
    LIQUIDITY_SCORE FLOAT COMMENT '1-10 scale for NMRF classification (1=illiquid, 10=liquid)',
    
    -- Metadata
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP() COMMENT 'Record creation timestamp'
) COMMENT = 'Raw fixed income trades (bonds and swaps) with FRTB risk metrics';

-- ============================================================
-- FIII_TRADES_STREAM - Change Data Capture
-- ============================================================
-- Captures all changes to FIII_TRADES for incremental processing

CREATE OR REPLACE STREAM FIII_TRADES_STREAM 
ON TABLE FIII_TRADES
COMMENT = 'CDC stream for FIII_TRADES table - captures inserts, updates, deletes';

-- ============================================================
-- FIII_STAGE - Internal Stage for CSV Ingestion
-- ============================================================
-- Internal stage for loading CSV files from fixed_income_generator.py

CREATE OR REPLACE STAGE FIII_STAGE
    FILE_FORMAT = (
        TYPE = CSV
        FIELD_DELIMITER = ','
        SKIP_HEADER = 1
        FIELD_OPTIONALLY_ENCLOSED_BY = '"'
        TRIM_SPACE = TRUE
        ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
        NULL_IF = ('NULL', 'null', '')
    )
    DIRECTORY = (ENABLE = TRUE)
COMMENT = 'Internal stage for fixed income trade CSV files';

-- Enable directory table for file tracking and metadata
ALTER STAGE FIII_STAGE REFRESH;

-- ============================================================
-- FIII_LOAD_TRADES_TASK - Automated CSV Loading
-- ============================================================
-- Serverless task that runs every 60 minutes to load new CSV files

CREATE OR REPLACE TASK FIII_LOAD_TRADES_TASK
    USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'
    SCHEDULE = '60 MINUTE'
WHEN
    SYSTEM$STREAM_HAS_DATA('FIII_TRADES_STREAM')
AS
    -- Copy new files from stage to table
    COPY INTO FIII_TRADES
    FROM @FIII_STAGE
    FILE_FORMAT = (
        TYPE = CSV
        FIELD_DELIMITER = ','
        SKIP_HEADER = 1
        FIELD_OPTIONALLY_ENCLOSED_BY = '"'
        TRIM_SPACE = TRUE
        ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
        NULL_IF = ('NULL', 'null', '')
    )
    ON_ERROR = CONTINUE
    PURGE = FALSE;  -- Keep files for audit trail

-- Resume the task to enable automated loading
ALTER TASK FIII_LOAD_TRADES_TASK RESUME;

-- ============================================================
-- USAGE EXAMPLES
-- ============================================================
--
-- 1. Load CSV file manually:
--    PUT file://path/to/fixed_income_trades.csv @FIII_STAGE;
--    COPY INTO FIII_TRADES FROM @FIII_STAGE
--    FILE_FORMAT = (TYPE = CSV SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '"');
--
-- 2. Query recent trades:
--    SELECT * FROM FIII_TRADES 
--    WHERE TRADE_DATE >= CURRENT_DATE - 30
--    ORDER BY TRADE_DATE DESC;
--
-- 3. Check bonds vs swaps:
--    SELECT INSTRUMENT_TYPE, COUNT(*) as trade_count, 
--           SUM(BASE_GROSS_AMOUNT) as total_notional_chf
--    FROM FIII_TRADES
--    GROUP BY INSTRUMENT_TYPE;
--
-- 4. Monitor stream for new data:
--    SELECT * FROM FIII_TRADES_STREAM;
--
-- 5. Resume automated loading task:
--    ALTER TASK FIII_LOAD_TRADES_TASK RESUME;
--
-- 6. Check task execution history:
--    SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
--    WHERE NAME = 'FIII_LOAD_TRADES_TASK'
--    ORDER BY SCHEDULED_TIME DESC;
--
-- 7. Query directory table to see loaded files:
--    SELECT * FROM DIRECTORY(@FIII_STAGE);
--
-- 8. Check file metadata and load history:
--    SELECT 
--      RELATIVE_PATH,
--      SIZE,
--      LAST_MODIFIED,
--      MD5
--    FROM DIRECTORY(@FIII_STAGE)
--    ORDER BY LAST_MODIFIED DESC;
--
-- ============================================================
-- FII_RAW_001 Schema Setup Complete!
-- ============================================================
