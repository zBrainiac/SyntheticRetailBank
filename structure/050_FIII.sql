-- ============================================================
-- FII_RAW_001 Schema - Fixed Income Raw Data Ingestion
-- Generated on: 2025-10-05
-- ============================================================
--
-- OVERVIEW:
-- This schema stores raw fixed income trade data including government bonds,
-- corporate bonds, and interest rate swaps (IRS). Data is loaded from CSV files
-- generated by fixed_income_generator.py.
--
-- BUSINESS PURPOSE:
-- - Store all fixed income trades for interest rate risk management
-- - Support FRTB (Fundamental Review of the Trading Book) capital calculations
-- - Enable duration and DV01 analytics for interest rate sensitivity
-- - Track credit spread risk for corporate bond portfolios
-- - Maintain audit trail for regulatory compliance
--
-- OBJECTS CREATED:
-- ┌─ STAGES (1):
-- │  └─ FIII_TRADES      - Fixed income trade files
-- │
-- ├─ FILE FORMATS (1):
-- │  └─ FIII_FF_TRADES_CSV - Fixed income trade CSV format
-- │
-- ├─ TABLES (1):
-- │  └─ FIII_TRADES - Main table for all fixed income trades
-- │
-- ├─ STREAMS (1):
-- │  └─ FIII_TRADES_STREAM - Change data capture for incremental processing
-- │
-- └─ TASKS (1):
--    └─ FIII_LOAD_TRADES_TASK - Serverless task for automated CSV loading
--
-- DATA FLOW:
-- CSV Files → FIII_TRADES → FIII_TRADES → FIII_TRADES_STREAM → FII_AGG_001
--
-- RELATED SCHEMAS:
-- - FII_AGG_001: Aggregation layer for duration, DV01, and credit risk analytics
-- - CRM_RAW_001: Customer and account master data
-- - REF_RAW_001: FX rates for currency conversion
-- ============================================================

USE DATABASE AAA_DEV_SYNTHETIC_BANK;
USE SCHEMA FII_RAW_001;


-- ============================================================
-- INTERNAL STAGES - File Landing Areas
-- ============================================================
-- Internal stages for CSV file ingestion with directory listing enabled
-- for automated file detection via streams. All stages support PUT/GET
-- operations for manual file uploads and downloads.

-- Fixed income trade data stage
CREATE OR REPLACE STAGE FIII_TRADES
    DIRECTORY = (
        ENABLE = TRUE
        AUTO_REFRESH = TRUE
    )
    COMMENT = 'Internal stage for fixed income trade CSV files. Expected pattern: *fixed_income_trades*.csv with fields: trade_date, trade_id, customer_id, account_id, instrument_type, notional, price, etc.';

-- Enable directory table for file tracking and metadata
ALTER STAGE FIII_TRADES REFRESH;

-- ============================================================
-- FILE FORMATS - CSV Parsing Configurations
-- ============================================================
-- Standardized CSV file formats for consistent data ingestion across
-- all fixed income trade data sources. All formats handle quoted fields,
-- trim whitespace, and use flexible column count matching.

-- Fixed income trade CSV format
CREATE OR REPLACE FILE FORMAT FIII_FF_TRADES_CSV
    TYPE = 'CSV'
    FIELD_DELIMITER = ','
    RECORD_DELIMITER = '\n'
    SKIP_HEADER = 1
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    TRIM_SPACE = TRUE
    ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
    REPLACE_INVALID_CHARACTERS = TRUE
    DATE_FORMAT = 'YYYY-MM-DD'
    TIMESTAMP_FORMAT = 'YYYY-MM-DD"T"HH24:MI:SS.FF"Z"'
    COMMENT = 'CSV format for fixed income trade data with FRTB risk metrics and currency conversion support';

-- ============================================================
-- MASTER DATA TABLES - Fixed Income Trade Information
-- ============================================================

-- ============================================================
-- FIII_TRADES - Main Fixed Income Trades Table
-- ============================================================
-- Stores all bond and interest rate swap trades with risk metrics

CREATE OR REPLACE TABLE FIII_TRADES (
    -- Trade Identification
    TRADE_DATE TIMESTAMP_NTZ COMMENT 'Trade execution timestamp',
    SETTLEMENT_DATE DATE COMMENT 'Settlement date for cash/securities transfer',
    TRADE_ID VARCHAR(50) PRIMARY KEY COMMENT 'Unique trade identifier',
    CUSTOMER_ID VARCHAR(30) COMMENT 'Customer who executed the trade',
    ACCOUNT_ID VARCHAR(30) COMMENT 'Investment account used for settlement',
    ORDER_ID VARCHAR(50) COMMENT 'Order reference for trade grouping',
    
    -- Instrument Details
    INSTRUMENT_TYPE VARCHAR(10) COMMENT 'BOND or IRS (Interest Rate Swap)',
    INSTRUMENT_ID VARCHAR(50) COMMENT 'ISIN for bonds, swap ID for swaps',
    ISSUER VARCHAR(100) COMMENT 'Bond issuer or swap counterparty',
    ISSUER_TYPE VARCHAR(20) COMMENT 'SOVEREIGN, CORPORATE, or SUPRANATIONAL',
    CURRENCY VARCHAR(3) COMMENT 'Trade currency (CHF, EUR, USD, GBP)',
    SIDE VARCHAR(1) COMMENT '1=Buy/Pay, 2=Sell/Receive (FIX standard)',
    
    -- Financial Details
    NOTIONAL FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Notional amount (face value)',
    PRICE FLOAT COMMENT 'Clean price (as % of par for bonds, rate for swaps)',
    ACCRUED_INTEREST FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Accrued interest amount (bonds only)',
    GROSS_AMOUNT FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Signed gross amount: price * notional + accrued',
    COMMISSION FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Trading commission',
    NET_AMOUNT FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Signed net amount: gross_amount +/- commission',
    
    -- Base Currency (CHF)
    BASE_CURRENCY VARCHAR(3) COMMENT 'Base reporting currency (CHF)',
    BASE_GROSS_AMOUNT FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Gross amount in CHF',
    BASE_NET_AMOUNT FLOAT WITH TAG (SENSITIVITY_LEVEL='restricted') COMMENT 'Net amount in CHF',
    FX_RATE FLOAT COMMENT 'Exchange rate used for conversion to CHF',
    
    -- Swap-Specific Fields
    FIXED_RATE FLOAT COMMENT 'Fixed rate for IRS (annual %)',
    FLOATING_RATE_INDEX VARCHAR(20) COMMENT 'SARON, EURIBOR, SOFR, SONIA',
    TENOR_YEARS FLOAT COMMENT 'Swap maturity in years',
    
    -- Risk Metrics (FRTB)
    COUPON_RATE FLOAT COMMENT 'Annual coupon rate (%)',
    MATURITY_DATE DATE COMMENT 'Instrument maturity date',
    DURATION FLOAT COMMENT 'Modified duration (years) - interest rate sensitivity',
    DV01 FLOAT COMMENT 'Dollar value of 1bp move in base currency',
    CREDIT_RATING VARCHAR(10) COMMENT 'AAA, AA, A, BBB, BB, B, CCC',
    CREDIT_SPREAD_BPS FLOAT COMMENT 'Spread over risk-free rate (basis points)',
    
    -- Market Data
    MARKET VARCHAR(50) COMMENT 'Trading venue/exchange',
    BROKER_ID VARCHAR(50) COMMENT 'Executing broker identifier',
    VENUE VARCHAR(50) COMMENT 'Trading venue',
    LIQUIDITY_SCORE FLOAT COMMENT '1-10 scale for NMRF classification (1=illiquid, 10=liquid)',
    
    -- Metadata
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP() COMMENT 'Record creation timestamp'
) COMMENT = 'Raw fixed income trades (bonds and swaps) with FRTB risk metrics';

-- ============================================================
-- CHANGE DETECTION STREAMS - File Monitoring
-- ============================================================
-- Streams monitor stages for new files and trigger automated processing
-- tasks. Each stream detects specific file patterns and maintains change
-- tracking for reliable data pipeline processing.

-- Fixed income trade file detection stream
CREATE OR REPLACE STREAM FIII_TRADES_STREAM
    ON STAGE FIII_TRADES
    COMMENT = 'Monitors FIII_TRADES stage for new fixed income trade CSV files. Triggers FIII_LOAD_TRADES_TASK when files matching *fixed_income_trades*.csv pattern are detected';

-- ============================================================
-- AUTOMATED PROCESSING TASKS - Data Pipeline Orchestration
-- ============================================================
-- Automated tasks triggered by stream data availability. All tasks run
-- on 1-hour schedule with stream-based triggering for efficient resource
-- usage. Error handling continues processing despite individual record failures.

-- Fixed income trade loading task
CREATE OR REPLACE TASK FIII_LOAD_TRADES_TASK
    USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'
    SCHEDULE = '60 MINUTE'
    WHEN SYSTEM$STREAM_HAS_DATA('FIII_TRADES_STREAM')
AS
    COPY INTO FIII_TRADES (
        TRADE_DATE, SETTLEMENT_DATE, TRADE_ID, CUSTOMER_ID, ACCOUNT_ID, ORDER_ID,
        INSTRUMENT_TYPE, INSTRUMENT_ID, ISSUER, ISSUER_TYPE, CURRENCY, SIDE,
        NOTIONAL, PRICE, ACCRUED_INTEREST, GROSS_AMOUNT, FIXED_RATE, FLOATING_RATE_INDEX, TENOR_YEARS,
        COMMISSION, NET_AMOUNT, BASE_CURRENCY, BASE_GROSS_AMOUNT, BASE_NET_AMOUNT, FX_RATE,
        COUPON_RATE, MATURITY_DATE, DURATION, DV01, CREDIT_RATING, CREDIT_SPREAD_BPS,
        MARKET, BROKER_ID, VENUE, LIQUIDITY_SCORE
    )
    FROM @FIII_TRADES
    PATTERN = '.*fixed_income_trades.*\.csv'
    FILE_FORMAT = FIII_FF_TRADES_CSV
    ON_ERROR = CONTINUE;

-- ============================================================
-- TASK ACTIVATION - Enable Automated Processing
-- ============================================================
-- Tasks must be explicitly resumed to begin processing. This allows for
-- controlled deployment and testing before enabling automated data flows.

-- Enable fixed income trade data loading
ALTER TASK FIII_LOAD_TRADES_TASK RESUME;

-- ============================================================
-- USAGE EXAMPLES
-- ============================================================
--
-- 1. Load CSV file manually:
--    PUT file://path/to/fixed_income_trades.csv @FIII_TRADES;
--    COPY INTO FIII_TRADES FROM @FIII_TRADES
--    FILE_FORMAT = (TYPE = CSV SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '"');
--
-- 2. Query recent trades:
--    SELECT * FROM FIII_TRADES 
--    WHERE TRADE_DATE >= CURRENT_DATE - 30
--    ORDER BY TRADE_DATE DESC;
--
-- 3. Check bonds vs swaps:
--    SELECT INSTRUMENT_TYPE, COUNT(*) as trade_count, 
--           SUM(BASE_GROSS_AMOUNT) as total_notional_chf
--    FROM FIII_TRADES
--    GROUP BY INSTRUMENT_TYPE;
--
-- 4. Monitor stream for new data:
--    SELECT * FROM FIII_TRADES_STREAM;
--
-- 5. Resume automated loading task:
--    ALTER TASK FIII_LOAD_TRADES_TASK RESUME;
--
-- 6. Check task execution history:
--    SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
--    WHERE NAME = 'FIII_LOAD_TRADES_TASK'
--    ORDER BY SCHEDULED_TIME DESC;
--
-- 7. Query directory table to see loaded files:
--    SELECT * FROM DIRECTORY(@FIII_TRADES);
--
-- 8. Check file metadata and load history:
--    SELECT 
--      RELATIVE_PATH,
--      SIZE,
--      LAST_MODIFIED,
--      MD5
--    FROM DIRECTORY(@FIII_TRADES)
--    ORDER BY LAST_MODIFIED DESC;
--
-- ============================================================
-- SCHEMA COMPLETION STATUS
-- ============================================================
-- ✅ FII_RAW_001 Schema Deployment Complete
--
-- OBJECTS CREATED:
-- • 1 Stage: FIII_TRADES
-- • 1 File Format: FIII_FF_TRADES_CSV
-- • 1 Table: FIII_TRADES
-- • 1 Stream: FIII_TRADES_STREAM
-- • 1 Task: FIII_LOAD_TRADES_TASK (ACTIVE)
--
-- NEXT STEPS:
-- 1. ✅ FII_RAW_001 schema deployed successfully
-- 2. Upload fixed income trade CSV files to FIII_TRADES stage
-- 3. Monitor task execution: SHOW TASKS IN SCHEMA FII_RAW_001;
-- 4. Verify data loading: SELECT COUNT(*) FROM FIII_TRADES;
-- 5. Check for processing errors in task history
-- 6. Deploy FII_AGG_001 schema for duration and DV01 analytics
--
-- USAGE EXAMPLES:
-- -- Upload files
-- PUT file://fixed_income_trades.csv @FIII_TRADES;
-- 
-- -- Check trade distribution by instrument type
-- SELECT INSTRUMENT_TYPE, COUNT(*) as trade_count, 
--        SUM(BASE_GROSS_AMOUNT) as total_notional_chf
-- FROM FIII_TRADES
-- GROUP BY INSTRUMENT_TYPE;
--
-- -- Analyze FRTB risk metrics
-- SELECT CREDIT_RATING, AVG(DURATION) as avg_duration, AVG(DV01) as avg_dv01
-- FROM FIII_TRADES
-- WHERE CREDIT_RATING IS NOT NULL
-- GROUP BY CREDIT_RATING
-- ORDER BY CREDIT_RATING;
--
-- -- Monitor stream for new data
-- SELECT * FROM FIII_TRADES_STREAM;
--
-- -- Check task execution history
-- SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
-- WHERE NAME = 'FIII_LOAD_TRADES_TASK'
-- ORDER BY SCHEDULED_TIME DESC;
-- ============================================================
-- FII_RAW_001 Schema Setup Complete!
-- ============================================================
