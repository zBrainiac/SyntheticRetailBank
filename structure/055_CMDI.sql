-- ============================================================
-- CMD_RAW_001 Schema - Commodity Raw Data Ingestion
-- Generated on: 2025-10-05
-- ============================================================
--
-- OVERVIEW:
-- This schema stores raw commodity trade data including energy, precious metals,
-- base metals, and agricultural commodities. Data is loaded from CSV files
-- generated by commodity_generator.py.
--
-- BUSINESS PURPOSE:
-- - Store all commodity trades for market risk management
-- - Support FRTB (Fundamental Review of the Trading Book) capital calculations
-- - Enable delta risk analytics for price sensitivity
-- - Track physical delivery obligations and logistics
-- - Maintain audit trail for regulatory compliance
--
-- OBJECTS CREATED:
-- ┌─ TABLES (1):
-- │  └─ CMDI_TRADES - Main table for all commodity trades
-- │
-- ├─ STREAMS (1):
-- │  └─ CMDI_TRADES_STREAM - Change data capture for incremental processing
-- │
-- ├─ STAGES (1):
-- │  └─ CMDI_TRADES - Internal stage for CSV file ingestion
-- │
-- └─ TASKS (1):
--    └─ CMDI_LOAD_TRADES_TASK - Serverless task for automated CSV loading
--
-- DATA FLOW:
-- CSV Files → CMDI_TRADES → CMDI_TRADES → CMDI_TRADES_STREAM → CMD_AGG_001
--
-- RELATED SCHEMAS:
-- - CMD_AGG_001: Aggregation layer for delta risk and volatility analytics
-- - CRM_RAW_001: Customer and account master data
-- - REF_RAW_001: FX rates for currency conversion
-- ============================================================

USE DATABASE AAA_DEV_SYNTHETIC_BANK;
USE SCHEMA CMD_RAW_001;

-- ============================================================
-- CMDI_TRADES - Main Commodity Trades Table
-- ============================================================
-- Stores all commodity trades across energy, metals, and agricultural sectors

CREATE OR REPLACE TABLE CMDI_TRADES (
    -- Trade Identification
    TRADE_DATE TIMESTAMP_NTZ COMMENT 'Trade execution timestamp',
    SETTLEMENT_DATE DATE COMMENT 'Settlement/delivery date',
    TRADE_ID VARCHAR(50) PRIMARY KEY COMMENT 'Unique trade identifier',
    CUSTOMER_ID VARCHAR(20) COMMENT 'Customer who executed the trade',
    ACCOUNT_ID VARCHAR(50) COMMENT 'Investment account used for settlement',
    ORDER_ID VARCHAR(50) COMMENT 'Order reference for trade grouping',
    
    -- Commodity Details
    COMMODITY_TYPE VARCHAR(20) COMMENT 'ENERGY, PRECIOUS_METAL, BASE_METAL, AGRICULTURAL',
    COMMODITY_NAME VARCHAR(50) COMMENT 'Crude Oil WTI, Gold, Copper, Wheat, etc.',
    COMMODITY_CODE VARCHAR(10) COMMENT 'WTI, XAU, HG, ZW, etc.',
    CONTRACT_TYPE VARCHAR(10) COMMENT 'SPOT, FUTURE, FORWARD, SWAP',
    
    -- Trade Details
    SIDE VARCHAR(1) COMMENT '1=Buy, 2=Sell (FIX standard)',
    QUANTITY FLOAT COMMENT 'Quantity in commodity units',
    UNIT VARCHAR(20) COMMENT 'Barrel, Troy Ounce, Metric Ton, Bushel, etc.',
    PRICE FLOAT COMMENT 'Price per unit in trade currency',
    CURRENCY VARCHAR(3) COMMENT 'Trading currency (USD, EUR, GBP, CHF)',
    
    -- Financial Details
    GROSS_AMOUNT FLOAT COMMENT 'Signed gross amount: quantity * price',
    COMMISSION FLOAT COMMENT 'Trading commission',
    NET_AMOUNT FLOAT COMMENT 'Signed net amount: gross_amount +/- commission',
    
    -- Base Currency (CHF)
    BASE_CURRENCY VARCHAR(3) COMMENT 'Base reporting currency (CHF)',
    BASE_GROSS_AMOUNT FLOAT COMMENT 'Gross amount in CHF',
    BASE_NET_AMOUNT FLOAT COMMENT 'Net amount in CHF',
    FX_RATE FLOAT COMMENT 'Exchange rate used for conversion to CHF',
    
    -- Contract Details
    CONTRACT_SIZE FLOAT COMMENT 'Standard contract size',
    NUM_CONTRACTS FLOAT COMMENT 'Number of contracts',
    DELIVERY_MONTH VARCHAR(7) COMMENT 'Delivery month (YYYY-MM format)',
    DELIVERY_LOCATION VARCHAR(100) COMMENT 'Physical delivery location/hub',
    
    -- Risk Metrics (FRTB)
    DELTA FLOAT COMMENT 'Price sensitivity (change in value for $1 move in commodity)',
    VEGA FLOAT COMMENT 'Volatility sensitivity (for options, if applicable)',
    SPOT_PRICE FLOAT COMMENT 'Current spot price',
    FORWARD_PRICE FLOAT COMMENT 'Forward/futures price',
    VOLATILITY FLOAT COMMENT 'Price volatility (%)',
    LIQUIDITY_SCORE FLOAT COMMENT '1-10 scale for NMRF classification (1=illiquid, 10=liquid)',
    
    -- Market Data
    EXCHANGE VARCHAR(20) COMMENT 'Trading exchange (CME, ICE, LME, NYMEX, CBOT)',
    BROKER_ID VARCHAR(50) COMMENT 'Executing broker identifier',
    VENUE VARCHAR(50) COMMENT 'Trading venue',
    
    -- Metadata
    CREATED_AT TIMESTAMP_NTZ DEFAULT CURRENT_TIMESTAMP() COMMENT 'Record creation timestamp'
) COMMENT = 'Raw commodity trades (energy, metals, agricultural) with FRTB risk metrics';

-- ============================================================
-- CMDI_TRADES_STREAM - Change Data Capture
-- ============================================================
-- Captures all changes to CMDI_TRADES for incremental processing

CREATE OR REPLACE STREAM CMDI_TRADES_STREAM 
ON TABLE CMDI_TRADES
COMMENT = 'CDC stream for CMDI_TRADES table - captures inserts, updates, deletes';

-- ============================================================
-- CMDI_TRADES - Internal Stage for CSV Ingestion
-- ============================================================
-- Internal stage for loading CSV files from commodity_generator.py

CREATE OR REPLACE STAGE CMDI_TRADES
    FILE_FORMAT = (
        TYPE = CSV
        FIELD_DELIMITER = ','
        SKIP_HEADER = 1
        FIELD_OPTIONALLY_ENCLOSED_BY = '"'
        TRIM_SPACE = TRUE
        ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
        NULL_IF = ('NULL', 'null', '')
    )
    DIRECTORY = (ENABLE = TRUE)
COMMENT = 'Internal stage for commodity trade CSV files';

-- Enable directory table for file tracking and metadata
ALTER STAGE CMDI_TRADES REFRESH;

-- ============================================================
-- CMDI_LOAD_TRADES_TASK - Automated CSV Loading
-- ============================================================
-- Serverless task that runs every 60 minutes to load new CSV files

CREATE OR REPLACE TASK CMDI_LOAD_TRADES_TASK
    USER_TASK_MANAGED_INITIAL_WAREHOUSE_SIZE = 'XSMALL'
    SCHEDULE = '60 MINUTE'
WHEN
    SYSTEM$STREAM_HAS_DATA('CMDI_TRADES_STREAM')
AS
    -- Copy new files from stage to table
    COPY INTO CMDI_TRADES
    FROM @CMDI_TRADES
    FILE_FORMAT = (
        TYPE = CSV
        FIELD_DELIMITER = ','
        SKIP_HEADER = 1
        FIELD_OPTIONALLY_ENCLOSED_BY = '"'
        TRIM_SPACE = TRUE
        ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
        NULL_IF = ('NULL', 'null', '')
    )
    ON_ERROR = CONTINUE
    PURGE = FALSE;  -- Keep files for audit trail

-- Resume the task to enable automated loading
ALTER TASK CMDI_LOAD_TRADES_TASK RESUME;

-- ============================================================
-- USAGE EXAMPLES
-- ============================================================
--
-- 1. Load CSV file manually:
--    PUT file://path/to/commodity_trades.csv @CMDI_TRADES;
--    COPY INTO CMDI_TRADES FROM @CMDI_TRADES
--    FILE_FORMAT = (TYPE = CSV SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = '"');
--
-- 2. Query recent trades:
--    SELECT * FROM CMDI_TRADES 
--    WHERE TRADE_DATE >= CURRENT_DATE - 30
--    ORDER BY TRADE_DATE DESC;
--
-- 3. Check commodity type distribution:
--    SELECT COMMODITY_TYPE, COUNT(*) as trade_count, 
--           SUM(BASE_GROSS_AMOUNT) as total_value_chf
--    FROM CMDI_TRADES
--    GROUP BY COMMODITY_TYPE;
--
-- 4. Find high-risk illiquid positions (NMRF):
--    SELECT COMMODITY_NAME, CUSTOMER_ID, QUANTITY, BASE_GROSS_AMOUNT
--    FROM CMDI_TRADES
--    WHERE LIQUIDITY_SCORE < 5
--    ORDER BY BASE_GROSS_AMOUNT DESC;
--
-- 5. Monitor stream for new data:
--    SELECT * FROM CMDI_TRADES_STREAM;
--
-- 6. Resume automated loading task:
--    ALTER TASK CMDI_LOAD_TRADES_TASK RESUME;
--
-- 7. Check task execution history:
--    SELECT * FROM TABLE(INFORMATION_SCHEMA.TASK_HISTORY())
--    WHERE NAME = 'CMDI_LOAD_TRADES_TASK'
--    ORDER BY SCHEDULED_TIME DESC;
--
-- 8. Analyze delivery schedule:
--    SELECT DELIVERY_MONTH, COMMODITY_TYPE, 
--           SUM(QUANTITY) as total_quantity,
--           COUNT(*) as contract_count
--    FROM CMDI_TRADES
--    WHERE DELIVERY_MONTH IS NOT NULL
--    GROUP BY DELIVERY_MONTH, COMMODITY_TYPE
--    ORDER BY DELIVERY_MONTH;
--
-- 9. Query directory table to see loaded files:
--    SELECT * FROM DIRECTORY(@CMDI_TRADES);
--
-- 10. Check file metadata and load history:
--     SELECT 
--       RELATIVE_PATH,
--       SIZE,
--       LAST_MODIFIED,
--       MD5
--     FROM DIRECTORY(@CMDI_TRADES)
--     ORDER BY LAST_MODIFIED DESC;
--
-- ============================================================
-- CMD_RAW_001 Schema Setup Complete!
-- ============================================================
